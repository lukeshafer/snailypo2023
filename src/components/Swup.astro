---
interface Props {
	routes: {
		name: string;
		path: string;
	}[];
}

const { routes } = Astro.props;
---

<script>
	import Swup from "swup";
	import SwupBodyClassPlugin from "@swup/body-class-plugin";
	import SwupPreloadPlugin from "@swup/preload-plugin";
	import SwupHeadPlugin from "@swup/head-plugin";
	import SwupA11yPlugin from "@swup/a11y-plugin";
	import SwupRouteNamePlugin from "@swup/route-name-plugin";

	const routeString = document.getElementById("swup")?.dataset?.routes ?? "[]";
	const routes = JSON.parse(routeString) as {
		name: string;
		path: string;
	}[];

	const tmpl = document.createElement("template");
	tmpl.innerHTML = `
		<div
			class="absolute top-0 left-1/2 w-[1vmax] h-[1vmax] grow-transition rounded-[50%] absolute transition-all duration-500"
			aria-hidden="true"
		/>
	`;

	const swup = new Swup({
		containers: ["#swup", "#swup-header"],
		plugins: [
			new SwupBodyClassPlugin(),
			new SwupPreloadPlugin(),
			new SwupHeadPlugin(),
			new SwupA11yPlugin(),
			new SwupRouteNamePlugin({
				routes: routes,
			}),
		],
	});

	swup.on("clickLink", (e) => {
		const link = e.target as HTMLAnchorElement;
		if (!link?.pathname) return;
		const pathname = link.pathname.split("/")[1] ?? "index";
		if (pathname === window.location.pathname.split("/")[1]) {
			return;
		}

		const clickEl = tmpl.content.firstElementChild!.cloneNode(
			true
		) as HTMLDivElement;
		const bg = link.dataset.bg;
		if (bg) {
			clickEl.classList.add(bg);
			clickEl.style.setProperty(
				"top",
				`${link.offsetTop + link.offsetHeight / 2}px`
			);
			clickEl.style.setProperty(
				"left",
				`${link.offsetLeft + link.offsetWidth / 2}px`
			);
			document.body.appendChild(clickEl);
			queueMicrotask(() => {
				clickEl.style.setProperty("transform", "scale(250)");
			});
		}

		document.querySelectorAll(".is-active").forEach((el) => {
			el.classList.remove("is-active");
		});
		const route = document.querySelector(`[href="${pathname}"]`);
		if (route) {
			route.classList.add("is-active");
		}

		swup.on("animationInStart", () => {
			if (clickEl) {
				clickEl.remove();
			}
			swup.off("pageLoaded");
		});
	});
</script>

<div id="swup" class="transition-fade" data-routes={JSON.stringify(routes)}>
	<slot />
</div>

<style is:global>
	.transition-fade {
		transition: 0.3s;
		opacity: 1;
	}

	html.is-rendering .transition-fade {
		opacity: 0;
	}

	.transition-slide {
		transition: 0.3s;
		transform: translateY(0);
	}

	html.to-route-index .transition-slide,
	html.from-route-index .transition-slide {
		transform: translateY(-100%);
	}

	a.is-active {
		font-weight: 700;
	}
</style>
